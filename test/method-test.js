const test = require('ava')
const pdfmake = require('../src/index')
const template = require('./data/template.json')
const templateDemo = require('./data/template-demo.json')
const bufferToBase64 = buffer => 'data:application/pdf;base64,' + buffer.toString('base64')

test('make-pdf', async t => {
  const expected = 'data:application/pdf;base64,'
  const actual = bufferToBase64(await pdfmake(template))
  t.is(actual.substring(0, 200), expected.substring(0, 200))
})

test('make-pdf demo', async t => {
  await pdfmake(templateDemo)
  t.pass()
})
